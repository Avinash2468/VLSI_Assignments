
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep  7 2019 19:33:47 IST (Sep  7 2019 14:03:47 UTC)

// Verification Directory fv/eight_one_mux 

module two_one_mux(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module two_one_mux_1(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module two_one_mux_2(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module four_one_mux(op, a, b, c, d, sel0, sel1);
  input a, b, c, d, sel0, sel1;
  output op;
  wire a, b, c, d, sel0, sel1;
  wire op;
  wire mux2_1, mux2_2;
  two_one_mux A(mux2_1, a, b, sel0);
  two_one_mux_1 B(mux2_2, c, d, sel0);
  two_one_mux_2 C(op, mux2_1, mux2_2, sel1);
endmodule

module two_one_mux_3(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module two_one_mux_4(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module two_one_mux_5(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module four_one_mux_1(op, a, b, c, d, sel0, sel1);
  input a, b, c, d, sel0, sel1;
  output op;
  wire a, b, c, d, sel0, sel1;
  wire op;
  wire mux2_1, mux2_2;
  two_one_mux_3 A(.op (mux2_1), .a (a), .b (b), .sel (sel0));
  two_one_mux_4 B(.op (mux2_2), .a (c), .b (d), .sel (sel0));
  two_one_mux_5 C(.op (op), .a (mux2_1), .b (mux2_2), .sel (sel1));
endmodule

module two_one_mux_6(op, a, b, sel);
  input a, b, sel;
  output op;
  wire a, b, sel;
  wire op;
  MX2X1 g24(.A (a), .B (b), .S0 (sel), .Y (op));
endmodule

module eight_one_mux(op, a, b, c, d, e, f, g, h, sel0, sel1, sel2);
  input a, b, c, d, e, f, g, h, sel0, sel1, sel2;
  output op;
  wire a, b, c, d, e, f, g, h, sel0, sel1, sel2;
  wire op;
  wire four_1mux1, four_1mux2;
  four_one_mux A(four_1mux1, a, b, c, d, sel0, sel1);
  four_one_mux_1 B(four_1mux2, e, f, g, h, sel0, sel1);
  two_one_mux_6 C(op, four_1mux1, four_1mux2, sel2);
endmodule

